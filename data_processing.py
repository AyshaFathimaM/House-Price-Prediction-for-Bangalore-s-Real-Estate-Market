# -*- coding: utf-8 -*-
"""data_processing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nUWqBsRSwqc9aQhRdXff9irvdBu-XLFu
"""
import pandas as pd
import numpy as np

def load_data(file_path):
    """
    Load the dataset from the specified file path.

    Args:
        file_path (str): Path to the CSV file.

    Returns:
        pd.DataFrame: Loaded dataset.
    """
    try:
        return pd.read_csv(file_path)
    except FileNotFoundError:
        print(f"Error: The file at {file_path} was not found.")
        raise

def preprocess_data(data):
    """
    Preprocess the data (handle missing values, feature engineering, etc.).

    Args:
        data (pd.DataFrame): Raw data.

    Returns:
        pd.DataFrame: Preprocessed data.
    """
    # Drop irrelevant columns
    if "availability" in data.columns:
        data = data.drop(["availability"], axis=1)

    # Handle missing values
    data['size'] = data['size'].fillna(data['size'].mode()[0])
    data['bath'] = data['bath'].fillna(data['bath'].median())
    data['balcony'] = data['balcony'].fillna(data['balcony'].median())
    data['location'] = data['location'].fillna("Unknown")
    data['total_sqft'] = data['total_sqft'].apply(convert_sqft_to_num)

    # Remove rows with invalid total_sqft values
    data = data.dropna(subset=["total_sqft"])

    return data

def convert_sqft_to_num(sqft):
    """
    Convert total_sqft to a numeric value.

    Args:
        sqft (str): Total square feet value as a string.

    Returns:
        float or None: Converted numeric value or None for invalid entries.
    """
    try:
        if '-' in str(sqft):
            sqft_range = sqft.split('-')
            return (float(sqft_range[0]) + float(sqft_range[1])) / 2
        return float(sqft)
    except ValueError:
        return None

def perform_eda(data):
    """
    Perform exploratory data analysis (optional, visualization code).

    Args:
        data (pd.DataFrame): Preprocessed data.
    """
    print("Data Overview:")
    print(data.describe())
    print(data.info())
    print(data.isnull().sum())

    # Add visualization code here if needed
    # Example:
    # import matplotlib.pyplot as plt
    # data['price'].hist()
    # plt.show()

if __name__ == "__main__":
    # Example usage
    file_path = r"C:\Users\Indra\Desktop\Praxis\Term 2\MLOPS\Bangalore Housing\Bengaluru_House_Data.csv"
    print("Loading data...")
    data = load_data(file_path)
    print("Preprocessing data...")
    data = preprocess_data(data)
    print("Performing EDA...")
    perform_eda(data)
    print("Saving preprocessed data to 'processed_data.csv'...")
    data.to_csv('processed_data.csv', index=False)
    print("Data processing complete.")



